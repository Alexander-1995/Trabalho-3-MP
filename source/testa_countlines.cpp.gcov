        -:    0:Source:testa_countlines.cpp
        -:    0:Graph:testa_countlines.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1://// "Copyright 2018 Alexander André de Souza"
        -:    2://  testa_countlines.c
        -:    3://
        -:    4://
        -:    5://  Created by Alexander André De Souza Vieira on 03/10/2018.
        -:    6://
        -:    7:#define CATCH_CONFIG_MAIN
        -:    8:// This tells Catch to provide a main() - only do this in one cpp file
        -:    9:#include <stdio.h>
        -:   10:#include <stdlib.h>
        -:   11:#include <ctype.h>
        -:   12:#include "countlines.hpp"
        -:   13:#include "catch.hpp" /*!Inclusão da biblioteca catch.hpp para poder realizar os testes.*/
        -:   14:
    #####:   15:char nome_arq[Nom_Max_Arq] = "fibonacci.c";
    #####:   16:char nome_arq2[Nom_Max_Arq] = "rand.c";
        -:   17:char nome_arq3[Nom_Max_Arq] = "printasc.c";
    #####:   18:char nome_arq4[Nom_Max_Arq] = "CalculaSoma.c";
        -:   19:
        -:   20:// //Teste utilizado inicialmente
        -:   21:// int main(void)
        -:   22:// {
        -:   23://    int x;
        -:   24://    char nome_arq[Nom_Max_Arq] = "fibonacci.c";
        -:   25://
        -:   26://    x = conta_linha(nome_arq);
        -:   27://    printf("\n\n\n%d\n",x);
        -:   28://        return 0;
        -:   29:// }
        -:   30:
        -:   31:TEST_CASE("Teste de Contagem de Linhas do Código Fibonacci", "[count_lines_of_code]") {
        -:   32:    REQUIRE(conta_linha(nome_arq) == 32);
        -:   33:    REQUIRE(conta_coment_barra(nome_arq) == 6);
        -:   34:    REQUIRE(conta_linha_em_branco(nome_arq) == 3);
        -:   35:    REQUIRE(conta_coment_barra_e_ast(nome_arq) == 7);
        -:   36:    REQUIRE(quant_linhas_efetivas(nome_arq) == 16);
        -:   37:}
        -:   38:
        -:   39:TEST_CASE("Teste de Contagem de Linhas do Código Rand", "[count_lines_of_code]") {
        -:   40:    REQUIRE(conta_linha(nome_arq2) == 37);
        -:   41:    REQUIRE(conta_coment_barra(nome_arq2) == 7);
        -:   42:    REQUIRE(conta_linha_em_branco(nome_arq2) == 16);
        -:   43:    REQUIRE(conta_coment_barra_e_ast(nome_arq2) == 1);
        -:   44:    REQUIRE(quant_linhas_efetivas(nome_arq2) == 13);
        -:   45:}
        -:   46:
        -:   47:TEST_CASE("Teste de Contagem de Linhas do Código Printa ASC", "[count_lines_of_code]") {
        -:   48:    REQUIRE(conta_linha(nome_arq3) == 24);
        -:   49:    REQUIRE(conta_coment_barra(nome_arq3) == 9);
        -:   50:    REQUIRE(conta_linha_em_branco(nome_arq3) == 4);
        -:   51:    REQUIRE(conta_coment_barra_e_ast(nome_arq3) == 1);
        -:   52:    REQUIRE(quant_linhas_efetivas(nome_arq3) == 10);
        -:   53:}
        -:   54:
        -:   55:TEST_CASE("Teste de Contagem de Linhas do Código Calcula Soma", "[count_lines_of_code]") {
        -:   56:    REQUIRE(conta_linha(nome_arq4) == 26);
        -:   57:    REQUIRE(conta_coment_barra(nome_arq4) == 7);
        -:   58:    REQUIRE(conta_linha_em_branco(nome_arq4) == 6);
        -:   59:    REQUIRE(conta_coment_barra_e_ast(nome_arq4) == 0);
        -:   60:    REQUIRE(quant_linhas_efetivas(nome_arq4) == 13);
        -:   61:}
